$(document).ready(function() {var formatter = new CucumberHTML.DOMFormatter($('.cucumber-report'));formatter.uri("file:src/test/resources/Features/TX_01.feature");
formatter.feature({
  "name": "validating the notabene transaction by automation",
  "description": "",
  "keyword": "Feature",
  "tags": [
    {
      "name": "@tag"
    }
  ]
});
formatter.scenario({
  "name": "validating the transaction with no rule",
  "description": "",
  "keyword": "Scenario",
  "tags": [
    {
      "name": "@tag"
    }
  ]
});
formatter.before({
  "status": "passed"
});
formatter.step({
  "name": "orginator goes to application Notabene",
  "keyword": "Given "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_goes_to_application_Notabene()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator with valid credentials they login",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_with_valid_credentials_they_login()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator set the norule for transaction",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_set_the_norule_for_transaction()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator do transaction with below threshhold value",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_do_transaction_with_below_threshhold_value()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator check the inbox",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_check_the_inbox()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator do transaction with valid amount",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_do_transaction_with_valid_amount()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator cancel the transaction",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_cancel_the_transaction()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator do transaction with valid amount secound time",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_do_transaction_with_valid_amount_secound_time()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator approve transaction from Inbox",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_approve_transaction_from_Inbox()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator cancel transaction from All",
  "keyword": "And "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_cancel_transaction_from_All()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator do transaction with valid amount third time",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_do_transaction_with_valid_amount_third_time()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator approve transaction from Inbox on third time",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_approve_transaction_from_Inbox_on_third_time()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "move from orginator to benificinary.........",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.move_from_orginator_to_benificinary()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "benificinary reject the address",
  "keyword": "And "
});
formatter.match({
  "location": "NoRuleSingleFlow.benificinary_reject_the_address()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "move from benificinary to orginator....",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.move_from_benificinary_to_orginator()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator do transaction with valid amount fourth time",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_do_transaction_with_valid_amount_fourth_time()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator approve transaction from Inbox on fourth time",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_approve_transaction_from_Inbox_on_fourth_time()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "move from orginator to benificinary secound time..........",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.move_from_orginator_to_benificinary_secound_time()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "benificinary accept the address",
  "keyword": "And "
});
formatter.match({
  "location": "NoRuleSingleFlow.benificinary_accept_the_address()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "benificinary reject transaction",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.benificinary_reject_transaction()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "move from benificinary to orginator secound time....",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.move_from_benificinary_to_orginator_secound_time()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator do transaction with valid amount fifth time",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_do_transaction_with_valid_amount_fifth_time()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator approve transaction from Inbox on fifth time",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_approve_transaction_from_Inbox_on_fifth_time()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "move from orginator to benificinary third time..........",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.move_from_orginator_to_benificinary_third_time()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "benificinary accept the address",
  "keyword": "And "
});
formatter.match({
  "location": "NoRuleSingleFlow.benificinary_accept_the_address()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "benificinary accept transaction",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.benificinary_accept_transaction()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "move from benificinary to orginator to change into basic",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.move_from_benificinary_to_orginator_to_change_into_basic()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator set the basic rule for transaction",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_set_the_basic_rule_for_transaction()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator do transaction with below threshhold value in basic rule",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_do_transaction_with_below_threshhold_value_in_basic_rule()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator checks inbox",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_checks_inbox()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator do transaction with valid amount with basic rule",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_do_transaction_with_valid_amount_with_basic_rule()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator cancel the transaction in All",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_cancel_the_transaction_in_All()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator do transaction with valid amount secound time with basic rule",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_do_transaction_with_valid_amount_secound_time_with_basic_rule()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "move from orginator to benificinary for transaction",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.move_from_orginator_to_benificinary_for_transaction()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "benificinary reject the address from inbox with basic rule",
  "keyword": "And "
});
formatter.match({
  "location": "NoRuleSingleFlow.benificinary_reject_the_address_from_inbox_with_basic_rule()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "move from benificinary to orginator to transaction",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.move_from_benificinary_to_orginator_to_transaction()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "orginator do transaction with valid amount third time with basic rule",
  "keyword": "When "
});
formatter.match({
  "location": "NoRuleSingleFlow.orginator_do_transaction_with_valid_amount_third_time_with_basic_rule()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "move from orginator to benificinary secound time for transaction",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.move_from_orginator_to_benificinary_secound_time_for_transaction()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "benificinary accept the amount",
  "keyword": "And "
});
formatter.match({
  "location": "NoRuleSingleFlow.benificinary_accept_the_amount()"
});
formatter.result({
  "status": "passed"
});
formatter.step({
  "name": "beneificier do transaction with valid amount",
  "keyword": "Then "
});
formatter.match({
  "location": "NoRuleSingleFlow.beneificier_do_transaction_with_valid_amount()"
});
formatter.result({
  "error_message": "junit.framework.ComparisonFailure: verified expected:\u003c[1.5]200\u003e but was:\u003c[]200\u003e\r\n\tat junit.framework.Assert.assertEquals(Assert.java:100)\r\n\tat com.stepdefinition.NoRuleSingleFlow.beneificier_do_transaction_with_valid_amount(NoRuleSingleFlow.java:692)\r\n\tat ✽.beneificier do transaction with valid amount(file:src/test/resources/Features/TX_01.feature:44)\r\n",
  "status": "failed"
});
formatter.embedding("image/png", "embedded0.png", null);
formatter.after({
  "status": "passed"
});
});